<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencent.mapperEquipmentProductMapper">
  <resultMap id="BaseResultMap" type="com.tencent.pojoEquipmentProduct">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="equipment_id" jdbcType="INTEGER" property="equipmentId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="yield" jdbcType="INTEGER" property="yield" />
    <result column="unit" jdbcType="INTEGER" property="unit" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, equipment_id, product_id, yield, unit, factory_id
  </sql>
  <select id="selectByExample" parameterType="com.tencent.pojoEquipmentProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tsmcp_equipment_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tsmcp_equipment_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tsmcp_equipment_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tencent.pojoEquipmentProductExample">
    delete from tsmcp_equipment_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tencent.pojoEquipmentProduct">
    insert into tsmcp_equipment_product (id, equipment_id, product_id, 
      yield, unit, factory_id
      )
    values (#{id,jdbcType=INTEGER}, #{equipmentId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{yield,jdbcType=INTEGER}, #{unit,jdbcType=INTEGER}, #{factoryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tencent.pojoEquipmentProduct">
    insert into tsmcp_equipment_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="yield != null">
        yield,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="factoryId != null">
        factory_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="yield != null">
        #{yield,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        #{factoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tencent.pojoEquipmentProductExample" resultType="java.lang.Long">
    select count(*) from tsmcp_equipment_product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tsmcp_equipment_product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.yield != null">
        yield = #{record.yield,jdbcType=INTEGER},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=INTEGER},
      </if>
      <if test="record.factoryId != null">
        factory_id = #{record.factoryId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tsmcp_equipment_product
    set id = #{record.id,jdbcType=INTEGER},
      equipment_id = #{record.equipmentId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      yield = #{record.yield,jdbcType=INTEGER},
      unit = #{record.unit,jdbcType=INTEGER},
      factory_id = #{record.factoryId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tencent.pojoEquipmentProduct">
    update tsmcp_equipment_product
    <set>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="yield != null">
        yield = #{yield,jdbcType=INTEGER},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null">
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tencent.pojoEquipmentProduct">
    update tsmcp_equipment_product
    set equipment_id = #{equipmentId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      yield = #{yield,jdbcType=INTEGER},
      unit = #{unit,jdbcType=INTEGER},
      factory_id = #{factoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>